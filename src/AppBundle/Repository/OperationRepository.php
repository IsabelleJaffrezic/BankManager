<?php

namespace AppBundle\Repository;
use AppBundle\Entity\Compte;
use AppBundle\Entity\Operation;

/**
 * OperationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OperationRepository extends \Doctrine\ORM\EntityRepository
{
    public function findAPointerByCompte(Compte $compte)
    {
        $operationList = $this->_em
            ->createQuery(
                'SELECT o, m 
                 FROM AppBundle:Operation o
                 LEFT JOIN o.modePaiement m
                 WHERE o.dateValeur IS NULL AND o.compte = :compte
                 ORDER BY o.dateOperation DESC')
            ->setParameter('compte', $compte);

        return $operationList->getResult();
    }

    public function findPointeeByCompte(Compte $compte)
    {
        $operationList = $this->_em
            ->createQuery(
                'SELECT o, m 
                 FROM AppBundle:Operation o
                 LEFT JOIN o.modePaiement m
                 WHERE o.dateValeur IS NOT NULL AND o.compte = :compte
                 ORDER BY o.dateOperation DESC')
            ->setParameter('compte', $compte);

        return $operationList->getResult();
    }

    public function findOperation(Operation $operation)
    {
        $qb = $this->createQueryBuilder('o')
            ->where('o.libelle = :libelle')->setParameter('libelle', $operation->getLibelle())
            ->andWhere('o.modePaiement = :modepaiement')->setParameter('modepaiement', $operation->getModePaiement()->getId())
            ->andWhere('o.montant = :montant')->setParameter('montant', $operation->getMontant())
            ->andWhere('o.dateOperation = :dateOperation')->setParameter('dateOperation', $operation->getDateOperation()->format('Y-m-d'));

        if ($operation->getDateValeur() instanceof \DateTime) {
            $qb->andWhere('o.dateValeur = :dateValeur')->setParameter('dateValeur', $operation->getDateValeur()->format('Y-m-d'));
        }

        return $qb->getQuery()->getOneOrNullResult();
    }
}
